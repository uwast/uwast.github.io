{
    "docs": [
        {
            "location": "/", 
            "text": "Welcome to UW Sailbopt Documentation\n\n\nNavigation\n\n\nTo navigate our documentation, simply scroll through the various sections in the window on the left of the screen and select the page you wish to view.\nTo search for a block of text, simply type the string into the search bar to the left.\n\n\nSub-Teams\n\n\nWe have 3 sub-teams that compose our team:\n\n\n\n\n\n\nMechanical\n\n\n\n\n\n\nControls-Navigation\n\n\n\n\n\n\nControls-Vision\n\n\n\n\n\n\nBusiness", 
            "title": "Our Documentation"
        }, 
        {
            "location": "/#welcome-to-uw-sailbopt-documentation", 
            "text": "", 
            "title": "Welcome to UW Sailbopt Documentation"
        }, 
        {
            "location": "/#navigation", 
            "text": "To navigate our documentation, simply scroll through the various sections in the window on the left of the screen and select the page you wish to view.\nTo search for a block of text, simply type the string into the search bar to the left.", 
            "title": "Navigation"
        }, 
        {
            "location": "/#sub-teams", 
            "text": "We have 3 sub-teams that compose our team:    Mechanical    Controls-Navigation    Controls-Vision    Business", 
            "title": "Sub-Teams"
        }, 
        {
            "location": "/about/", 
            "text": "Percussit sopore ducimus\n\n\nPectine moraque corripiens fallite faciat\n\n\nLorem markdownum\n est sed duabuset sororis flumina edocuit patulis consiliis\nprimordia rabiemque: paterer questaque, Actoridaeque. Munus qua succumbere ridet\ndonec arcus, vertitur genus, in convulso pharetraque adulterium esse. Retinacula\ntamen \nin\n introitu totoque: ulla\nreceperunt verba comes posset: atris subit, Atalanta. Populisque satiata imago\nper et movet, nunc quamvis \nflorem\n nominat: et nihil finemque. Hic sit quae,\nalma sospite inque.\n\n\nvar scareware_dma = pop_external_joystick(query_grep(vfat, clipboardEditor,\n        50), 57);\nzip = python_meme_lion / mnemonic / net * fifo + telecommunications;\ncamelcase_media(interlaced);\n\n\n\nSed si sequuntur meliore armento amaverat. Contingere tangere quam voluistis,\npars probas premebat; consulat ad locum!\n\n\nvar balance_zif_minimize = dmaPhreaking;\ncloudWebsite.basebandDaemon += smb.read_memory_vaporware(-4, packBug);\nif (36) {\n    teraflops(serverSdramYahoo, template_terminal_twain +\n            queuePayloadEbook);\n    cache_play.rw(zone, cron(netbios_wordart_webmaster, server_server_dvi));\n    microphone = device_dashboard(optical) + copyright_unmount;\n} else {\n    query_folder(atmDuplexMotion, 5);\n}\n\n\n\nMale texit dum saevisque proiecerat vatis sed\n\n\nAequoris iacent, lustrat albas adhuc Perseus, nostri, \nin\n, nec sunt humus\nAlcyone. Quod tamen, ait nudans vanum si in, peto. Troiana tu Iris sub conlegit\nmente castos populi Quid annos, iam nodis \npressos\n! Res suprema amat,\nmediusque videre, vidisset vulnera nomine positis illa. Posses clauserat\nferrugine bracchia fortuna, corpore et lacertis Panaque auditque Actaeis Aloidas\nducite novitatis cineres nentes, sibilat.\n\n\nvar ddl = mms;\nif (rowCtr + mirrored_ppi_ipad + keylogger_directx + -4) {\n    wordBasic(insertionDebuggerMegapixel, barBitrate + 5, digital.gpsHocDlc(\n            dvd_smm, 5));\n    domain_ssid_string.matrix_record = digitalWarmCrossplatform * troll +\n            bar_directx_rt;\n    uriTwain += phishing(5, 1, cpa_impression_adsl);\n}\nromTweet = 64769 + 2;\n\n\n\nPrius veteris \ntollite\n! En utque Glaucus faciat iugeribus periturus comas alis\ndiu potentior proque parva usus senili \nlibatos\n quas, per classe. Nereides\ndominos nata incubat nato, suo gramen dominum partes, est primum, eratque venatu\n\nsecundis\n. Accepit timidissime ille, via territa ut inque serpentigenis urget,\nsplendenti? Meorum \nilla\n, nec matremque ponit alias, fitque squamamque Cauno\nvidentur non \nMavors vocat Iovis\n.\n\n\nemoticon_executable_hardware.nvramSata += directxNas(\n        pseudocode_balancing.hfs.mediaNorthbridge(ircPublishing,\n        internicVeronicaError + 43), vdsl(design_degauss, virtual),\n        soft_optical.codeBasebandMemory(ipSynDigital, php_ecc_sli,\n        parityIsoArray));\nif (faq + social) {\n    trackback_box += parseConfiguration;\n    honeypot_progressive_keyboard += -1;\n    tutorialKernelFile = acl;\n} else {\n    scan(lteUserBacklink);\n}\nif (webUltra) {\n    array = webKilobyteClip + icioCopySchema + 1;\n} else {\n    document_icq -= 4;\n}\ndriverServiceString = bareRgb(time / fontMegapixel, menu);\n\n\n\nConfinia inpune? Nec dolet die declinet facta ille sic \nhauserit virgo\n\nAethiopasque terra sic quae male \ncaelumque discite exercebat\n. Totius memento\net quam gradu pectora venae Haemonio in factum,\n\ncrimina\n. Illa et Talia: me leto\npoterant! Sed vocis volucris validos, \nminister monstra\n utroque finiat annum.", 
            "title": "The Competition"
        }, 
        {
            "location": "/about/#percussit-sopore-ducimus", 
            "text": "", 
            "title": "Percussit sopore ducimus"
        }, 
        {
            "location": "/about/#pectine-moraque-corripiens-fallite-faciat", 
            "text": "Lorem markdownum  est sed duabuset sororis flumina edocuit patulis consiliis\nprimordia rabiemque: paterer questaque, Actoridaeque. Munus qua succumbere ridet\ndonec arcus, vertitur genus, in convulso pharetraque adulterium esse. Retinacula\ntamen  in  introitu totoque: ulla\nreceperunt verba comes posset: atris subit, Atalanta. Populisque satiata imago\nper et movet, nunc quamvis  florem  nominat: et nihil finemque. Hic sit quae,\nalma sospite inque.  var scareware_dma = pop_external_joystick(query_grep(vfat, clipboardEditor,\n        50), 57);\nzip = python_meme_lion / mnemonic / net * fifo + telecommunications;\ncamelcase_media(interlaced);  Sed si sequuntur meliore armento amaverat. Contingere tangere quam voluistis,\npars probas premebat; consulat ad locum!  var balance_zif_minimize = dmaPhreaking;\ncloudWebsite.basebandDaemon += smb.read_memory_vaporware(-4, packBug);\nif (36) {\n    teraflops(serverSdramYahoo, template_terminal_twain +\n            queuePayloadEbook);\n    cache_play.rw(zone, cron(netbios_wordart_webmaster, server_server_dvi));\n    microphone = device_dashboard(optical) + copyright_unmount;\n} else {\n    query_folder(atmDuplexMotion, 5);\n}", 
            "title": "Pectine moraque corripiens fallite faciat"
        }, 
        {
            "location": "/about/#male-texit-dum-saevisque-proiecerat-vatis-sed", 
            "text": "Aequoris iacent, lustrat albas adhuc Perseus, nostri,  in , nec sunt humus\nAlcyone. Quod tamen, ait nudans vanum si in, peto. Troiana tu Iris sub conlegit\nmente castos populi Quid annos, iam nodis  pressos ! Res suprema amat,\nmediusque videre, vidisset vulnera nomine positis illa. Posses clauserat\nferrugine bracchia fortuna, corpore et lacertis Panaque auditque Actaeis Aloidas\nducite novitatis cineres nentes, sibilat.  var ddl = mms;\nif (rowCtr + mirrored_ppi_ipad + keylogger_directx + -4) {\n    wordBasic(insertionDebuggerMegapixel, barBitrate + 5, digital.gpsHocDlc(\n            dvd_smm, 5));\n    domain_ssid_string.matrix_record = digitalWarmCrossplatform * troll +\n            bar_directx_rt;\n    uriTwain += phishing(5, 1, cpa_impression_adsl);\n}\nromTweet = 64769 + 2;  Prius veteris  tollite ! En utque Glaucus faciat iugeribus periturus comas alis\ndiu potentior proque parva usus senili  libatos  quas, per classe. Nereides\ndominos nata incubat nato, suo gramen dominum partes, est primum, eratque venatu secundis . Accepit timidissime ille, via territa ut inque serpentigenis urget,\nsplendenti? Meorum  illa , nec matremque ponit alias, fitque squamamque Cauno\nvidentur non  Mavors vocat Iovis .  emoticon_executable_hardware.nvramSata += directxNas(\n        pseudocode_balancing.hfs.mediaNorthbridge(ircPublishing,\n        internicVeronicaError + 43), vdsl(design_degauss, virtual),\n        soft_optical.codeBasebandMemory(ipSynDigital, php_ecc_sli,\n        parityIsoArray));\nif (faq + social) {\n    trackback_box += parseConfiguration;\n    honeypot_progressive_keyboard += -1;\n    tutorialKernelFile = acl;\n} else {\n    scan(lteUserBacklink);\n}\nif (webUltra) {\n    array = webKilobyteClip + icioCopySchema + 1;\n} else {\n    document_icq -= 4;\n}\ndriverServiceString = bareRgb(time / fontMegapixel, menu);  Confinia inpune? Nec dolet die declinet facta ille sic  hauserit virgo \nAethiopasque terra sic quae male  caelumque discite exercebat . Totius memento\net quam gradu pectora venae Haemonio in factum, crimina . Illa et Talia: me leto\npoterant! Sed vocis volucris validos,  minister monstra  utroque finiat annum.", 
            "title": "Male texit dum saevisque proiecerat vatis sed"
        }, 
        {
            "location": "/goals/", 
            "text": "", 
            "title": "Our Goals"
        }, 
        {
            "location": "/team/", 
            "text": "", 
            "title": "The Team"
        }, 
        {
            "location": "/mechanical/", 
            "text": "", 
            "title": "Mechanical"
        }, 
        {
            "location": "/electrical/", 
            "text": "", 
            "title": "Electrical"
        }, 
        {
            "location": "/navigation/", 
            "text": "Navigation\n\n\nOne of the three controls subteams, the navigation team focuses mostly on integrating sensor data, interfacing ROS architecture and lower level boards and path planning.  Work is also done on various calibration and tesing tools, including a 2d simulation GUI currently in development.\n\n\nIf you wish to join this team or have any questions please email the Controls lead Seamus Johnston at sbjohnst@uwaterloo.ca.", 
            "title": "Intro to Navigation"
        }, 
        {
            "location": "/navigation/#navigation", 
            "text": "One of the three controls subteams, the navigation team focuses mostly on integrating sensor data, interfacing ROS architecture and lower level boards and path planning.  Work is also done on various calibration and tesing tools, including a 2d simulation GUI currently in development.  If you wish to join this team or have any questions please email the Controls lead Seamus Johnston at sbjohnst@uwaterloo.ca.", 
            "title": "Navigation"
        }, 
        {
            "location": "/installation/", 
            "text": "Installing ROS\n\n\nInstalling ROS is rather straight forward, however it must be noted that you have to have Ubuntu 16.04.3 installed on your computer, whether it be a partition or a virtual machine.  We use the ROS Kinetic distribution.  For a detailed guide on install ROS please go \nhere\n.\n\n\nInstalling the barebones or desktop version should suffice although you may need to install extra dependancies later.  If you are working on simulators or GUIs at all, get the desktop full installation.\n\n\nInstalling our packages\n\n\nTo install the boat's software, you must first create a catkin workspace, by following this \ntutorial\n. Delete you src folder and clone the boat's package as the src folder with the following command:\n\n\n$ git clone https://github.com/uwsailbot/boat_2018.git src\n\n\n\nDependancies\n\n\nThis package relies on phidgets_imu and imu_filter_madgwick in order to compile.  Clone it from \nphidgets\n and \nimu_tools\n (into your catkin_ws/src folder) or download both using the following command (if the following command doesn't work, just download the above git repos):\n\n\n$ rosdep install boat_nav\n\n\n\nEither way make sure to read the README.md in their repo and follow some extra steps.\n\n\nYou must download the python phidgets API \nSee here\n\n\nRun this in the libphidget folder to build it:\n\n\n$ ./configure --prefix=/usr \n make \n sudo make install\n\n\n\nAlso be sure to download the phidgets compass calibration program \nSee here\n\n\nFinishing\n\n\nYou should then be able to build your catkin workspace with the command:\n\n\n$ catkin_make", 
            "title": "ROS Installation"
        }, 
        {
            "location": "/installation/#installing-ros", 
            "text": "Installing ROS is rather straight forward, however it must be noted that you have to have Ubuntu 16.04.3 installed on your computer, whether it be a partition or a virtual machine.  We use the ROS Kinetic distribution.  For a detailed guide on install ROS please go  here .  Installing the barebones or desktop version should suffice although you may need to install extra dependancies later.  If you are working on simulators or GUIs at all, get the desktop full installation.", 
            "title": "Installing ROS"
        }, 
        {
            "location": "/installation/#installing-our-packages", 
            "text": "To install the boat's software, you must first create a catkin workspace, by following this  tutorial . Delete you src folder and clone the boat's package as the src folder with the following command:  $ git clone https://github.com/uwsailbot/boat_2018.git src", 
            "title": "Installing our packages"
        }, 
        {
            "location": "/installation/#dependancies", 
            "text": "This package relies on phidgets_imu and imu_filter_madgwick in order to compile.  Clone it from  phidgets  and  imu_tools  (into your catkin_ws/src folder) or download both using the following command (if the following command doesn't work, just download the above git repos):  $ rosdep install boat_nav  Either way make sure to read the README.md in their repo and follow some extra steps.  You must download the python phidgets API  See here  Run this in the libphidget folder to build it:  $ ./configure --prefix=/usr   make   sudo make install  Also be sure to download the phidgets compass calibration program  See here", 
            "title": "Dependancies"
        }, 
        {
            "location": "/installation/#finishing", 
            "text": "You should then be able to build your catkin workspace with the command:  $ catkin_make", 
            "title": "Finishing"
        }, 
        {
            "location": "/overview/", 
            "text": "", 
            "title": "System Overview"
        }, 
        {
            "location": "/software/", 
            "text": "", 
            "title": "Software Overview"
        }, 
        {
            "location": "/vision_intro/", 
            "text": "What is Vision\n\n\nPectine moraque corripiens fallite faciat\n\n\nLorem markdownum\n est sed duabuset sororis flumina edocuit patulis consiliis\nprimordia rabiemque: paterer questaque, Actoridaeque. Munus qua succumbere ridet\ndonec arcus, vertitur genus, in convulso pharetraque adulterium esse. Retinacula\ntamen \nin\n introitu totoque: ulla\nreceperunt verba comes posset: atris subit, Atalanta. Populisque satiata imago\nper et movet, nunc quamvis \nflorem\n nominat: et nihil finemque. Hic sit quae,\nalma sospite inque.\n\n\nvar scareware_dma = pop_external_joystick(query_grep(vfat, clipboardEditor,\n        50), 57);\nzip = python_meme_lion / mnemonic / net * fifo + telecommunications;\ncamelcase_media(interlaced);\n\n\n\nSed si sequuntur meliore armento amaverat. Contingere tangere quam voluistis,\npars probas premebat; consulat ad locum!", 
            "title": "What is Vision"
        }, 
        {
            "location": "/vision_intro/#what-is-vision", 
            "text": "", 
            "title": "What is Vision"
        }, 
        {
            "location": "/vision_intro/#pectine-moraque-corripiens-fallite-faciat", 
            "text": "Lorem markdownum  est sed duabuset sororis flumina edocuit patulis consiliis\nprimordia rabiemque: paterer questaque, Actoridaeque. Munus qua succumbere ridet\ndonec arcus, vertitur genus, in convulso pharetraque adulterium esse. Retinacula\ntamen  in  introitu totoque: ulla\nreceperunt verba comes posset: atris subit, Atalanta. Populisque satiata imago\nper et movet, nunc quamvis  florem  nominat: et nihil finemque. Hic sit quae,\nalma sospite inque.  var scareware_dma = pop_external_joystick(query_grep(vfat, clipboardEditor,\n        50), 57);\nzip = python_meme_lion / mnemonic / net * fifo + telecommunications;\ncamelcase_media(interlaced);  Sed si sequuntur meliore armento amaverat. Contingere tangere quam voluistis,\npars probas premebat; consulat ad locum!", 
            "title": "Pectine moraque corripiens fallite faciat"
        }, 
        {
            "location": "/vision_approaches/", 
            "text": "", 
            "title": "Approaches"
        }, 
        {
            "location": "/vision_tensorflow/", 
            "text": "Buoy detection for navigation: Tensorflow approach\n\n\nAbout the classifier\n\n\nCurrently, we've implemented the \nInception-v3 model\n and retrained the top layer with our own classifiers (buoy, water, sailboats), which returns what the image is most likely to be. With enough data, the classifier should become very accurate and reliable.\n\n\nGetting Started\n\n\nPre-Installation\n\n\nPreferable to run on linux. Contact Irene Chen for a bootable USB to install Ubuntu 17.04.\n\n\nInstallation of Tensorflow\n\n\nThere's a good official installation guide \nhere\n.\nThings to note: preferable to set up a virtual environment (virtualenv) to avoid conflicts with python versions.\n\n\nStarting your virtualenv: \n\n\nsource ~/path/to/your/tensorflow/workspace/bin/activate\n\n\n\nCommon issues: if you've installed python in your virtualenv as well, you could skip this step. If there are conflicts with the python version, manually set up the path.\n\n\nexport PYTHONPATH=$PYTHONPATH:/path/to/image/classifier/project/lib\n\n\n\nRunning the current classifier\n\n\nGet the entire classifier \nhere\n (including the Tensorflow Inception model itself). Can be improved by adding more data in the training_dataset folder.\n\n\nGood Reads", 
            "title": "Tensorflow"
        }, 
        {
            "location": "/vision_tensorflow/#buoy-detection-for-navigation-tensorflow-approach", 
            "text": "", 
            "title": "Buoy detection for navigation: Tensorflow approach"
        }, 
        {
            "location": "/vision_tensorflow/#about-the-classifier", 
            "text": "Currently, we've implemented the  Inception-v3 model  and retrained the top layer with our own classifiers (buoy, water, sailboats), which returns what the image is most likely to be. With enough data, the classifier should become very accurate and reliable.", 
            "title": "About the classifier"
        }, 
        {
            "location": "/vision_tensorflow/#getting-started", 
            "text": "", 
            "title": "Getting Started"
        }, 
        {
            "location": "/vision_tensorflow/#pre-installation", 
            "text": "Preferable to run on linux. Contact Irene Chen for a bootable USB to install Ubuntu 17.04.", 
            "title": "Pre-Installation"
        }, 
        {
            "location": "/vision_tensorflow/#installation-of-tensorflow", 
            "text": "There's a good official installation guide  here .\nThings to note: preferable to set up a virtual environment (virtualenv) to avoid conflicts with python versions.  Starting your virtualenv:   source ~/path/to/your/tensorflow/workspace/bin/activate  Common issues: if you've installed python in your virtualenv as well, you could skip this step. If there are conflicts with the python version, manually set up the path.  export PYTHONPATH=$PYTHONPATH:/path/to/image/classifier/project/lib", 
            "title": "Installation of Tensorflow"
        }, 
        {
            "location": "/vision_tensorflow/#running-the-current-classifier", 
            "text": "Get the entire classifier  here  (including the Tensorflow Inception model itself). Can be improved by adding more data in the training_dataset folder.", 
            "title": "Running the current classifier"
        }, 
        {
            "location": "/vision_tensorflow/#good-reads", 
            "text": "", 
            "title": "Good Reads"
        }, 
        {
            "location": "/vision_hardware/", 
            "text": "", 
            "title": "Hardware"
        }, 
        {
            "location": "/vision_integration/", 
            "text": "", 
            "title": "Controls Integration"
        }, 
        {
            "location": "/mkdocs_tutorial/", 
            "text": "What is MkDocs?\n\n\nFrom the MkDocs Site:\n\n\n\"MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file.\"\n\n\nBasically, we use mkdocs as a tool for storing information about our boat and team.\n\n\nInstallation\n\n\nIn order to create new documentation pages using MkDocs, you first need to download the application. Information on how to install MkDocs can be found at the MkDocs \nwebsite\n.\n\n\nCreating Files\n\n\nOnce you have installed MkDocs you can begin to create documentation files! \n\n\nOur MkDoc base files are stored inside of the Sailbot website repository in the \"MkDocs\" folder, \ndownload this folder to your local system. Documentation pages are written in mark-up and stored in a .md format, \nyou'll find them in the \"docs/docs\" folder. an easy way to start writing in mark-up is to look at the \n\"barebones_doc.md\" file stored in the \"docs\" folder on the Sailbot website repository; \nthis will give you a foundation to build any sort of static page you want.\n\n\nIf you wish to change the file hierarchy of the project, \nyou must edit the .yml configuration file located in the \"docs\" folder, \nfurther information can be found at the MkDocs \nwebsite\n.\n\n\nThe easiest way to edit documents is to create a local server that hosts your MkDocs folder.\nTo do this on windows, open the command terminal, navigate to your \"MkDocs\" folder location and type:\n\n\nmkdocs serve\n\n\n\nThis will serve your folder at http://127.0.0.1:8000 and update automatically as you change documentation files!\n\n\nPushing Changes\n\n\nOnce you are happy with the documentation/changes you have made, build the project by typing the following command into the command terminal:\n\n\nmkdocs build\n\n\n\nThen simply push your changes to the website repository to Github and you're done!", 
            "title": "MkDocs Tutorial"
        }, 
        {
            "location": "/mkdocs_tutorial/#what-is-mkdocs", 
            "text": "From the MkDocs Site:  \"MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file.\"  Basically, we use mkdocs as a tool for storing information about our boat and team.", 
            "title": "What is MkDocs?"
        }, 
        {
            "location": "/mkdocs_tutorial/#installation", 
            "text": "In order to create new documentation pages using MkDocs, you first need to download the application. Information on how to install MkDocs can be found at the MkDocs  website .", 
            "title": "Installation"
        }, 
        {
            "location": "/mkdocs_tutorial/#creating-files", 
            "text": "Once you have installed MkDocs you can begin to create documentation files!   Our MkDoc base files are stored inside of the Sailbot website repository in the \"MkDocs\" folder, \ndownload this folder to your local system. Documentation pages are written in mark-up and stored in a .md format, \nyou'll find them in the \"docs/docs\" folder. an easy way to start writing in mark-up is to look at the \n\"barebones_doc.md\" file stored in the \"docs\" folder on the Sailbot website repository; \nthis will give you a foundation to build any sort of static page you want.  If you wish to change the file hierarchy of the project, \nyou must edit the .yml configuration file located in the \"docs\" folder, \nfurther information can be found at the MkDocs  website .  The easiest way to edit documents is to create a local server that hosts your MkDocs folder.\nTo do this on windows, open the command terminal, navigate to your \"MkDocs\" folder location and type:  mkdocs serve  This will serve your folder at http://127.0.0.1:8000 and update automatically as you change documentation files!", 
            "title": "Creating Files"
        }, 
        {
            "location": "/mkdocs_tutorial/#pushing-changes", 
            "text": "Once you are happy with the documentation/changes you have made, build the project by typing the following command into the command terminal:  mkdocs build  Then simply push your changes to the website repository to Github and you're done!", 
            "title": "Pushing Changes"
        }
    ]
}